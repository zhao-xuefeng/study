#### 时间复杂度

一个操作如果和样本的数据量没有关系，每次都是固定时间内完成的操作，叫做常数操作。时间复杂度为一个算法流程中，常数操作数量的一个指标。常用O(读作big O)来表示。
具体来说，先要对一个算法流程非常熟悉，然后去写出这个算法流程中，发生了多少常数操作，进而总结出常数操作数量的表达式。
在表达式中，只要高阶项，不要低阶项，也不要高阶项的系数，剩下的部分如果为f(N)，那么时间复杂度为O(f(N))。
评价一个算法流程的好坏，先看时间复杂度的指标，然后再分析不同数据样本下的实际运行时间，也就是“常数项时间”。
。

加减乘除，位运算 是常数操作。
数组 是个常数操作  int a=arr[3];
链表不是常数操作  因为需要遍历 和数据量有关。

大O 在数学当中表示的是 一个上限。当俩个算法时间复杂度高阶项相同时 ，就要比较常数项的值，实际去运行程序来确定算法的好坏.

**空间复杂度**:在有限的定义变量 就可以  称为O(1),需要开辟一个和原始数组一样的是O(N);

**冒泡排序**：相邻的比较交换位置，N个数 比较N-1 次  即O(N^2)

与运算：相同为1 ，不相同为0
**异或**：相同为0，不同为1 （也可以理解为无进位相加），满足交换律和结合律
例：1^0=1, 1^1=0。
可以交换值


